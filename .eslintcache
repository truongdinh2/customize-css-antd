[{"C:\\Users\\Admin\\Desktop\\tclearning\\tclearning\\src\\App.tsx":"1","C:\\Users\\Admin\\Desktop\\tclearning\\tclearning\\src\\form.tsx":"2","C:\\Users\\Admin\\Desktop\\tclearning\\tclearning\\src\\test.tsx":"3","C:\\Users\\Admin\\Desktop\\tclearning\\tclearning\\src\\components\\tableData\\table.jsx":"4","C:\\Users\\Admin\\Desktop\\tclearning\\tclearning\\src\\index.tsx":"5","C:\\Users\\Admin\\Desktop\\tclearning\\tclearning\\src\\reportWebVitals.ts":"6","C:\\Users\\Admin\\Desktop\\tclearning\\tclearning\\src\\components\\tableData\\pageTable.jsx":"7","C:\\Users\\Admin\\Desktop\\tclearning\\tclearning\\src\\components\\tableData\\ToolTable.tsx":"8","C:\\Users\\Admin\\Desktop\\tclearning\\tclearning\\src\\reducer\\dataSide.jsx":"9","C:\\Users\\Admin\\Desktop\\tclearning\\tclearning\\src\\constants\\index.js":"10","C:\\Users\\Admin\\Desktop\\tclearning\\tclearning\\src\\reducer\\myReducer.js":"11","C:\\Users\\Admin\\Desktop\\tclearning\\tclearning\\src\\action\\index.js":"12","C:\\Users\\Admin\\Desktop\\tclearning\\tclearning\\src\\api\\getApi.js":"13"},{"size":393,"mtime":1611040985081,"results":"14","hashOfConfig":"15"},{"size":4657,"mtime":1611113405183,"results":"16","hashOfConfig":"15"},{"size":849,"mtime":1610943364840,"results":"17","hashOfConfig":"15"},{"size":2455,"mtime":1611039304396,"results":"18","hashOfConfig":"15"},{"size":447,"mtime":1611117971522,"results":"19","hashOfConfig":"15"},{"size":425,"mtime":1610504214212,"results":"20","hashOfConfig":"15"},{"size":5564,"mtime":1611031492512,"results":"21","hashOfConfig":"15"},{"size":6608,"mtime":1611137891101,"results":"22","hashOfConfig":"15"},{"size":550,"mtime":1611133703010,"results":"23","hashOfConfig":"15"},{"size":155,"mtime":1611133491236,"results":"24","hashOfConfig":"15"},{"size":159,"mtime":1611117933151,"results":"25","hashOfConfig":"15"},{"size":367,"mtime":1611133559786,"results":"26","hashOfConfig":"15"},{"size":244,"mtime":1611126493842,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1uoxs7t",{"filePath":"31","messages":"32","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Admin\\Desktop\\tclearning\\tclearning\\src\\App.tsx",[],["59","60"],"C:\\Users\\Admin\\Desktop\\tclearning\\tclearning\\src\\form.tsx",["61","62","63","64","65"],"C:\\Users\\Admin\\Desktop\\tclearning\\tclearning\\src\\test.tsx",[],["66","67"],"C:\\Users\\Admin\\Desktop\\tclearning\\tclearning\\src\\components\\tableData\\table.jsx",[],["68","69"],"C:\\Users\\Admin\\Desktop\\tclearning\\tclearning\\src\\index.tsx",[],"C:\\Users\\Admin\\Desktop\\tclearning\\tclearning\\src\\reportWebVitals.ts",[],"C:\\Users\\Admin\\Desktop\\tclearning\\tclearning\\src\\components\\tableData\\pageTable.jsx",["70","71","72"],"C:\\Users\\Admin\\Desktop\\tclearning\\tclearning\\src\\components\\tableData\\ToolTable.tsx",["73","74","75","76"],"import { Button as ButtonMater } from '@material-ui/core';\r\nimport FilterListRoundedIcon from '@material-ui/icons/FilterListRounded';\r\nimport { Button, Form, Select } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { FilterTable, GetApi } from '../../action';\r\nimport './toolTable.css';\r\nconst { Option }: any = Select;\r\n\r\nconst children: any = [];\r\n// for (let i = 10; i < 36; i++) {\r\n//     children.push(<Option key={i.toString(36) + i}>{i.toString(36) + i}</Option>);\r\n// }\r\nexport default function ToolTable() {\r\n    const [valueSearch, setValueSearch] = useState<string>('');\r\n    const [isFilterBox, setIsFilterBox] = useState(false);\r\n    const [locationFilter, setLocationFilter] = useState<any>({data:[]});\r\n    const dispatch = useDispatch();\r\n    const [dataApi, setDataApi] = useState([]);\r\n    const [form] = Form.useForm();\r\n    const [loading, setLoading] = useState(false);\r\n    useEffect(() => {\r\n        getDataApi();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n    useEffect(() => {\r\n        dispatch(GetApi(dataApi))\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [loading])\r\n\r\n    const getDataApi = () => {\r\n        const api = \"https://5fbb616ec09c200016d4067a.mockapi.io/kito\";\r\n        const results = fetch(api)\r\n            .then(res => res.json())\r\n            .then(data => { setDataApi(data); setLoading(true) })\r\n            .catch(err => console.log(`Warning!!! Error fetching data!!! \r\n          Error ${err}`));\r\n        return results;\r\n    }\r\n\r\n    const dataRedux: any = useSelector((state: any) => state.dataSide)\r\n    function handleChange(value: any) {\r\n        console.log(`selected ${value}`);\r\n    }\r\n    const onFinish = (values: any) => {\r\n        setLocationFilter(values);\r\n        setLoading(!loading)\r\n    }\r\n    // const OptionSelect = () => (\r\n    //     dataRedux.data.map((data: any,index:number)=>(\r\n    //         <Option value={data} key={index}>\r\n    //             {console.log(data)}\r\n    //             {data.location}\r\n    //         </Option>\r\n    //     ))\r\n    // )\r\n    const FilterBox = () => (\r\n        <div className=\"model_filter\" >\r\n            {loading &&\r\n                <Form\r\n                    name=\"dynamic_form_nest_item\"\r\n                    onFinish={onFinish}\r\n                    form={form}\r\n                    autoComplete=\"off\"\r\n                >\r\n                    <div style={{\r\n                        display: 'flex',\r\n                        justifyContent: \"space-between\",\r\n                        padding: ' 10px 0'\r\n                    }}>\r\n                        <ButtonMater variant=\"contained\" color=\"secondary\">reset</ButtonMater >\r\n                        <ButtonMater variant=\"contained\" color=\"primary\"\r\n                            onClick={() => setIsFilterBox(!isFilterBox)}\r\n                        >x</ButtonMater >\r\n                    </div>\r\n                    <div>\r\n                        <Form.Item\r\n                            name=\"location\"\r\n                        >\r\n                            <Select\r\n                                mode=\"tags\"\r\n                                style={{ width: '100%' }}\r\n                                placeholder=\"location\"\r\n                                onChange={handleChange}\r\n                                maxLength={2}\r\n                            >\r\n                                { loading &&\r\n                                dataRedux.data.map((data: any, index: number) => (\r\n                                    <Option value={data.location} key={index}>\r\n                                        {data.location}\r\n                                    </Option>\r\n                                ))}\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </div>\r\n                    <div>\r\n                        <Form.Item\r\n                            name=\"subject\"\r\n                        >\r\n                            <Select mode=\"tags\" style={{ width: '100%' }}\r\n                                placeholder=\"subject\"\r\n                            // value=\"all\"\r\n                            // onChange={handleChange}\r\n                            >\r\n                                <Option value=\"all\" selec>All</Option>\r\n                                {children}\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </div>\r\n                    <div>\r\n                        <Form.Item\r\n                            name=\"cost\"\r\n                        >\r\n                            <Select mode=\"tags\" style={{ width: '100%' }}\r\n                                placeholder=\"cost\"\r\n                            // onChange={handleChange}\r\n                            >\r\n                                {children}\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </div>\r\n                    <div>\r\n                        <Button htmlType=\"submit\"  >sub</Button>\r\n                    </div>\r\n                </Form>}\r\n\r\n        </div>\r\n    )\r\n    // const getGitHubUserWithFetch1 = async () => {\r\n    //     const response = await fetch(\"https://5fbb616ec09c200016d4067a.mockapi.io/kito\");\r\n    //     const jsonData = await response.json();\r\n    //     console.log(jsonData);\r\n    //     return jsonData;\r\n    // };\r\n    // console.log(getGitHubUserWithFetch1())\r\n    console.log(locationFilter)\r\n    const FilterData = () => {\r\n        // console.log(locationFilter.location);\r\n        let loca:string[] = locationFilter.location;\r\n        // loca.map(());\r\n        // dataApi.data\r\n        setLocationFilter('')\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"body\">\r\n                <div className=\"form__group field\">\r\n                    <input type=\"input\" className=\"form__field\"\r\n                        onChange={(e: any) => setValueSearch(e.target.value)}\r\n                        placeholder=\"Name\" name=\"name\" id='name' />\r\n                    <label htmlFor=\"name\" className=\"form__label\">Name</label>\r\n                </div>\r\n                <div className=\"filter\" >\r\n                    <button\r\n                        className=\"btn_icon\"\r\n                        onClick={() => setIsFilterBox(!isFilterBox)}\r\n                    ><FilterListRoundedIcon color=\"secondary\" /></button>\r\n                    {isFilterBox && <FilterBox></FilterBox>}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\Admin\\Desktop\\tclearning\\tclearning\\src\\reducer\\dataSide.jsx",["77"],"C:\\Users\\Admin\\Desktop\\tclearning\\tclearning\\src\\constants\\index.js",[],"C:\\Users\\Admin\\Desktop\\tclearning\\tclearning\\src\\reducer\\myReducer.js",[],["78","79"],"C:\\Users\\Admin\\Desktop\\tclearning\\tclearning\\src\\action\\index.js",[],"C:\\Users\\Admin\\Desktop\\tclearning\\tclearning\\src\\api\\getApi.js",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":1,"column":38,"nodeType":"86","messageId":"87","endLine":1,"endColumn":41},{"ruleId":"84","severity":1,"message":"88","line":1,"column":43,"nodeType":"86","messageId":"87","endLine":1,"endColumn":46},{"ruleId":"84","severity":1,"message":"89","line":1,"column":48,"nodeType":"86","messageId":"87","endLine":1,"endColumn":55},{"ruleId":"84","severity":1,"message":"90","line":1,"column":57,"nodeType":"86","messageId":"87","endLine":1,"endColumn":67},{"ruleId":"84","severity":1,"message":"91","line":4,"column":10,"nodeType":"86","messageId":"87","endLine":4,"endColumn":19},{"ruleId":"80","replacedBy":"92"},{"ruleId":"82","replacedBy":"93"},{"ruleId":"80","replacedBy":"92"},{"ruleId":"82","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":4,"column":23,"nodeType":"86","messageId":"87","endLine":4,"endColumn":37},{"ruleId":"94","severity":1,"message":"96","line":4,"column":39,"nodeType":"86","messageId":"87","endLine":4,"endColumn":49},{"ruleId":"94","severity":1,"message":"97","line":4,"column":73,"nodeType":"86","messageId":"87","endLine":4,"endColumn":85},{"ruleId":"84","severity":1,"message":"98","line":6,"column":10,"nodeType":"86","messageId":"87","endLine":6,"endColumn":21},{"ruleId":"84","severity":1,"message":"99","line":15,"column":12,"nodeType":"86","messageId":"87","endLine":15,"endColumn":23},{"ruleId":"84","severity":1,"message":"100","line":137,"column":11,"nodeType":"86","messageId":"87","endLine":137,"endColumn":21},{"ruleId":"84","severity":1,"message":"101","line":139,"column":13,"nodeType":"86","messageId":"87","endLine":139,"endColumn":26},{"ruleId":"94","severity":1,"message":"102","line":1,"column":10,"nodeType":"86","messageId":"87","endLine":1,"endColumn":18},{"ruleId":"80","replacedBy":"103"},{"ruleId":"82","replacedBy":"104"},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"@typescript-eslint/no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","'Divider' is defined but never used.","'Typography' is defined but never used.","'useEffect' is defined but never used.",["105"],["106"],"no-unused-vars","'FormHelperText' is defined but never used.","'InputLabel' is defined but never used.","'NativeSelect' is defined but never used.","'FilterTable' is defined but never used.","'valueSearch' is assigned a value but never used.","'FilterData' is assigned a value but never used.","'loca' is assigned a value but never used.","'useState' is defined but never used.",["105"],["106"],"no-global-assign","no-unsafe-negation"]